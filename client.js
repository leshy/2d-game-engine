// Generated by CoffeeScript 1.7.1
(function() {
  var Backbone, Game, GameClient, _;

  Backbone = require('backbone4000');

  Game = require('game/models');

  _ = require('underscore');

  GameClient = exports.GameClient = Backbone.Model.extend4000({
    initialize: function() {
      this.subscribe({
        changes: Array
      }, (function(_this) {
        return function(msg) {
          return _this.applyChanges(msg.changes);
        };
      })(this));
      return this.subscribe({
        end: true
      }, (function(_this) {
        return function(msg) {
          return _.defer(function() {
            return _this.end(msg.end);
          });
        };
      })(this));
    },
    applyChanges: function(changes) {
      return _.map(changes, (function(_this) {
        return function(change) {
          return _this.applyChange(change);
        };
      })(this));
    },
    applyChange: function(change) {
      var attrs, point, state;
      if (change.a === 'set') {
        attrs = {
          id: change.id
        };
        if (change.o) {
          attrs = _.extend(attrs, change.o);
        }
        point = this.point(change.p);
        point.push(state = new this.state[change.s](attrs));
      }
      if (change.a === 'del') {
        this.byid[change.id].remove();
      }
      if (change.a === 'move') {
        this.byid[change.id].move(this.point(change.p));
      }
      if (change.a === 'msg') {
        return this.byid[change.id].trigger('message', change.m);
      }
    },
    nextid: function(state) {
      return "c" + this.stateid++;
    }
  });

}).call(this);
